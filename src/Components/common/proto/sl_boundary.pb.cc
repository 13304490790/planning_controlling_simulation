// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl_boundary.proto

#include "sl_boundary.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_pnc_5fpoint_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SLPoint_pnc_5fpoint_2eproto;
namespace boundary {
class SLBoundaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLBoundary> _instance;
} _SLBoundary_default_instance_;
}  // namespace boundary
static void InitDefaultsSLBoundary_sl_5fboundary_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::boundary::_SLBoundary_default_instance_;
    new (ptr) ::boundary::SLBoundary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::boundary::SLBoundary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SLBoundary_sl_5fboundary_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSLBoundary_sl_5fboundary_2eproto}, {
      &scc_info_SLPoint_pnc_5fpoint_2eproto.base,}};

void InitDefaults_sl_5fboundary_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_SLBoundary_sl_5fboundary_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_sl_5fboundary_2eproto[1];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_sl_5fboundary_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_sl_5fboundary_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_sl_5fboundary_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::boundary::SLBoundary, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::boundary::SLBoundary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::boundary::SLBoundary, start_s_),
  PROTOBUF_FIELD_OFFSET(::boundary::SLBoundary, end_s_),
  PROTOBUF_FIELD_OFFSET(::boundary::SLBoundary, start_l_),
  PROTOBUF_FIELD_OFFSET(::boundary::SLBoundary, end_l_),
  PROTOBUF_FIELD_OFFSET(::boundary::SLBoundary, boundary_point_),
  0,
  1,
  2,
  3,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::boundary::SLBoundary)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::boundary::_SLBoundary_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_sl_5fboundary_2eproto = {
  {}, AddDescriptors_sl_5fboundary_2eproto, "sl_boundary.proto", schemas,
  file_default_instances, TableStruct_sl_5fboundary_2eproto::offsets,
  file_level_metadata_sl_5fboundary_2eproto, 1, file_level_enum_descriptors_sl_5fboundary_2eproto, file_level_service_descriptors_sl_5fboundary_2eproto,
};

const char descriptor_table_protodef_sl_5fboundary_2eproto[] =
  "\n\021sl_boundary.proto\022\010boundary\032\017pnc_point"
  ".proto\"u\n\nSLBoundary\022\017\n\007start_s\030\001 \001(\001\022\r\n"
  "\005end_s\030\002 \001(\001\022\017\n\007start_l\030\003 \001(\001\022\r\n\005end_l\030\004"
  " \001(\001\022\'\n\016boundary_point\030\005 \003(\0132\017.points.SL"
  "Point"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_sl_5fboundary_2eproto = {
  false, InitDefaults_sl_5fboundary_2eproto, 
  descriptor_table_protodef_sl_5fboundary_2eproto,
  "sl_boundary.proto", &assign_descriptors_table_sl_5fboundary_2eproto, 165,
};

void AddDescriptors_sl_5fboundary_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_pnc_5fpoint_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_sl_5fboundary_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_sl_5fboundary_2eproto = []() { AddDescriptors_sl_5fboundary_2eproto(); return true; }();
namespace boundary {

// ===================================================================

void SLBoundary::InitAsDefaultInstance() {
}
class SLBoundary::HasBitSetters {
 public:
  static void set_has_start_s(SLBoundary* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_end_s(SLBoundary* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_start_l(SLBoundary* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_end_l(SLBoundary* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

void SLBoundary::clear_boundary_point() {
  boundary_point_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLBoundary::kStartSFieldNumber;
const int SLBoundary::kEndSFieldNumber;
const int SLBoundary::kStartLFieldNumber;
const int SLBoundary::kEndLFieldNumber;
const int SLBoundary::kBoundaryPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLBoundary::SLBoundary()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:boundary.SLBoundary)
}
SLBoundary::SLBoundary(const SLBoundary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      boundary_point_(from.boundary_point_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_s_, &from.start_s_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_l_) -
    reinterpret_cast<char*>(&start_s_)) + sizeof(end_l_));
  // @@protoc_insertion_point(copy_constructor:boundary.SLBoundary)
}

void SLBoundary::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SLBoundary_sl_5fboundary_2eproto.base);
  ::memset(&start_s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_l_) -
      reinterpret_cast<char*>(&start_s_)) + sizeof(end_l_));
}

SLBoundary::~SLBoundary() {
  // @@protoc_insertion_point(destructor:boundary.SLBoundary)
  SharedDtor();
}

void SLBoundary::SharedDtor() {
}

void SLBoundary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SLBoundary& SLBoundary::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SLBoundary_sl_5fboundary_2eproto.base);
  return *internal_default_instance();
}


void SLBoundary::Clear() {
// @@protoc_insertion_point(message_clear_start:boundary.SLBoundary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  boundary_point_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&start_s_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&end_l_) -
        reinterpret_cast<char*>(&start_s_)) + sizeof(end_l_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SLBoundary::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SLBoundary*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional double start_s = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_start_s(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // optional double end_s = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_end_s(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // optional double start_l = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 25) goto handle_unusual;
        msg->set_start_l(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // optional double end_l = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 33) goto handle_unusual;
        msg->set_end_l(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // repeated .points.SLPoint boundary_point = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::points::SLPoint::_InternalParse;
          object = msg->add_boundary_point();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SLBoundary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:boundary.SLBoundary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double start_s = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_start_s(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &start_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double end_s = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {
          HasBitSetters::set_has_end_s(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &end_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double start_l = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (25 & 0xFF)) {
          HasBitSetters::set_has_start_l(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &start_l_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double end_l = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (33 & 0xFF)) {
          HasBitSetters::set_has_end_l(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &end_l_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .points.SLPoint boundary_point = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_boundary_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:boundary.SLBoundary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:boundary.SLBoundary)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SLBoundary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:boundary.SLBoundary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double start_s = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->start_s(), output);
  }

  // optional double end_s = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->end_s(), output);
  }

  // optional double start_l = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->start_l(), output);
  }

  // optional double end_l = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->end_l(), output);
  }

  // repeated .points.SLPoint boundary_point = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boundary_point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->boundary_point(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:boundary.SLBoundary)
}

::google::protobuf::uint8* SLBoundary::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:boundary.SLBoundary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double start_s = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->start_s(), target);
  }

  // optional double end_s = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->end_s(), target);
  }

  // optional double start_l = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->start_l(), target);
  }

  // optional double end_l = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->end_l(), target);
  }

  // repeated .points.SLPoint boundary_point = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boundary_point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->boundary_point(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:boundary.SLBoundary)
  return target;
}

size_t SLBoundary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:boundary.SLBoundary)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .points.SLPoint boundary_point = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->boundary_point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->boundary_point(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional double start_s = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional double end_s = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional double start_l = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional double end_l = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SLBoundary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:boundary.SLBoundary)
  GOOGLE_DCHECK_NE(&from, this);
  const SLBoundary* source =
      ::google::protobuf::DynamicCastToGenerated<SLBoundary>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:boundary.SLBoundary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:boundary.SLBoundary)
    MergeFrom(*source);
  }
}

void SLBoundary::MergeFrom(const SLBoundary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:boundary.SLBoundary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  boundary_point_.MergeFrom(from.boundary_point_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      start_s_ = from.start_s_;
    }
    if (cached_has_bits & 0x00000002u) {
      end_s_ = from.end_s_;
    }
    if (cached_has_bits & 0x00000004u) {
      start_l_ = from.start_l_;
    }
    if (cached_has_bits & 0x00000008u) {
      end_l_ = from.end_l_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SLBoundary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:boundary.SLBoundary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLBoundary::CopyFrom(const SLBoundary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:boundary.SLBoundary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLBoundary::IsInitialized() const {
  return true;
}

void SLBoundary::Swap(SLBoundary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLBoundary::InternalSwap(SLBoundary* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&boundary_point_)->InternalSwap(CastToBase(&other->boundary_point_));
  swap(start_s_, other->start_s_);
  swap(end_s_, other->end_s_);
  swap(start_l_, other->start_l_);
  swap(end_l_, other->end_l_);
}

::google::protobuf::Metadata SLBoundary::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_sl_5fboundary_2eproto);
  return ::file_level_metadata_sl_5fboundary_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace boundary
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::boundary::SLBoundary* Arena::CreateMaybeMessage< ::boundary::SLBoundary >(Arena* arena) {
  return Arena::CreateInternal< ::boundary::SLBoundary >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
