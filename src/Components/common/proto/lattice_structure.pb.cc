// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lattice_structure.proto

#include "lattice_structure.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_lattice_5fstructure_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StopPoint_lattice_5fstructure_2eproto;
namespace lattice_structure {
class StopPointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StopPoint> _instance;
} _StopPoint_default_instance_;
class PlanningTargetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlanningTarget> _instance;
} _PlanningTarget_default_instance_;
}  // namespace lattice_structure
static void InitDefaultsStopPoint_lattice_5fstructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::lattice_structure::_StopPoint_default_instance_;
    new (ptr) ::lattice_structure::StopPoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lattice_structure::StopPoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StopPoint_lattice_5fstructure_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStopPoint_lattice_5fstructure_2eproto}, {}};

static void InitDefaultsPlanningTarget_lattice_5fstructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::lattice_structure::_PlanningTarget_default_instance_;
    new (ptr) ::lattice_structure::PlanningTarget();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lattice_structure::PlanningTarget::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PlanningTarget_lattice_5fstructure_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPlanningTarget_lattice_5fstructure_2eproto}, {
      &scc_info_StopPoint_lattice_5fstructure_2eproto.base,}};

void InitDefaults_lattice_5fstructure_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_StopPoint_lattice_5fstructure_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlanningTarget_lattice_5fstructure_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_lattice_5fstructure_2eproto[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_lattice_5fstructure_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_lattice_5fstructure_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_lattice_5fstructure_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::lattice_structure::StopPoint, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::lattice_structure::StopPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::lattice_structure::StopPoint, s_),
  PROTOBUF_FIELD_OFFSET(::lattice_structure::StopPoint, type_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::lattice_structure::PlanningTarget, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::lattice_structure::PlanningTarget, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::lattice_structure::PlanningTarget, stop_point_),
  PROTOBUF_FIELD_OFFSET(::lattice_structure::PlanningTarget, cruise_speed_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::lattice_structure::StopPoint)},
  { 9, 16, sizeof(::lattice_structure::PlanningTarget)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::lattice_structure::_StopPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lattice_structure::_PlanningTarget_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_lattice_5fstructure_2eproto = {
  {}, AddDescriptors_lattice_5fstructure_2eproto, "lattice_structure.proto", schemas,
  file_default_instances, TableStruct_lattice_5fstructure_2eproto::offsets,
  file_level_metadata_lattice_5fstructure_2eproto, 2, file_level_enum_descriptors_lattice_5fstructure_2eproto, file_level_service_descriptors_lattice_5fstructure_2eproto,
};

const char descriptor_table_protodef_lattice_5fstructure_2eproto[] =
  "\n\027lattice_structure.proto\022\021lattice_struc"
  "ture\"i\n\tStopPoint\022\t\n\001s\030\001 \001(\001\0225\n\004type\030\002 \001"
  "(\0162!.lattice_structure.StopPoint.Type:\004H"
  "ARD\"\032\n\004Type\022\010\n\004HARD\020\000\022\010\n\004SOFT\020\001\"X\n\016Plann"
  "ingTarget\0220\n\nstop_point\030\001 \001(\0132\034.lattice_"
  "structure.StopPoint\022\024\n\014cruise_speed\030\002 \001("
  "\001"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_lattice_5fstructure_2eproto = {
  false, InitDefaults_lattice_5fstructure_2eproto, 
  descriptor_table_protodef_lattice_5fstructure_2eproto,
  "lattice_structure.proto", &assign_descriptors_table_lattice_5fstructure_2eproto, 241,
};

void AddDescriptors_lattice_5fstructure_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_lattice_5fstructure_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_lattice_5fstructure_2eproto = []() { AddDescriptors_lattice_5fstructure_2eproto(); return true; }();
namespace lattice_structure {
const ::google::protobuf::EnumDescriptor* StopPoint_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_lattice_5fstructure_2eproto);
  return file_level_enum_descriptors_lattice_5fstructure_2eproto[0];
}
bool StopPoint_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const StopPoint_Type StopPoint::HARD;
const StopPoint_Type StopPoint::SOFT;
const StopPoint_Type StopPoint::Type_MIN;
const StopPoint_Type StopPoint::Type_MAX;
const int StopPoint::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void StopPoint::InitAsDefaultInstance() {
}
class StopPoint::HasBitSetters {
 public:
  static void set_has_s(StopPoint* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_type(StopPoint* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StopPoint::kSFieldNumber;
const int StopPoint::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StopPoint::StopPoint()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:lattice_structure.StopPoint)
}
StopPoint::StopPoint(const StopPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&s_, &from.s_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&s_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:lattice_structure.StopPoint)
}

void StopPoint::SharedCtor() {
  ::memset(&s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&s_)) + sizeof(type_));
}

StopPoint::~StopPoint() {
  // @@protoc_insertion_point(destructor:lattice_structure.StopPoint)
  SharedDtor();
}

void StopPoint::SharedDtor() {
}

void StopPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopPoint& StopPoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StopPoint_lattice_5fstructure_2eproto.base);
  return *internal_default_instance();
}


void StopPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:lattice_structure.StopPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&s_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&s_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StopPoint::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StopPoint*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional double s = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_s(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // optional .lattice_structure.StopPoint.Type type = 2 [default = HARD];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::lattice_structure::StopPoint_Type_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(2, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_type(static_cast<::lattice_structure::StopPoint_Type>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StopPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lattice_structure.StopPoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double s = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_s(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .lattice_structure.StopPoint.Type type = 2 [default = HARD];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::lattice_structure::StopPoint_Type_IsValid(value)) {
            set_type(static_cast< ::lattice_structure::StopPoint_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lattice_structure.StopPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lattice_structure.StopPoint)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StopPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lattice_structure.StopPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double s = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->s(), output);
  }

  // optional .lattice_structure.StopPoint.Type type = 2 [default = HARD];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:lattice_structure.StopPoint)
}

::google::protobuf::uint8* StopPoint::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:lattice_structure.StopPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double s = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->s(), target);
  }

  // optional .lattice_structure.StopPoint.Type type = 2 [default = HARD];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lattice_structure.StopPoint)
  return target;
}

size_t StopPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lattice_structure.StopPoint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional double s = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional .lattice_structure.StopPoint.Type type = 2 [default = HARD];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lattice_structure.StopPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const StopPoint* source =
      ::google::protobuf::DynamicCastToGenerated<StopPoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lattice_structure.StopPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lattice_structure.StopPoint)
    MergeFrom(*source);
  }
}

void StopPoint::MergeFrom(const StopPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lattice_structure.StopPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      s_ = from.s_;
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StopPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lattice_structure.StopPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopPoint::CopyFrom(const StopPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lattice_structure.StopPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopPoint::IsInitialized() const {
  return true;
}

void StopPoint::Swap(StopPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StopPoint::InternalSwap(StopPoint* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(s_, other->s_);
  swap(type_, other->type_);
}

::google::protobuf::Metadata StopPoint::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_lattice_5fstructure_2eproto);
  return ::file_level_metadata_lattice_5fstructure_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PlanningTarget::InitAsDefaultInstance() {
  ::lattice_structure::_PlanningTarget_default_instance_._instance.get_mutable()->stop_point_ = const_cast< ::lattice_structure::StopPoint*>(
      ::lattice_structure::StopPoint::internal_default_instance());
}
class PlanningTarget::HasBitSetters {
 public:
  static const ::lattice_structure::StopPoint& stop_point(const PlanningTarget* msg);
  static void set_has_stop_point(PlanningTarget* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_cruise_speed(PlanningTarget* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

const ::lattice_structure::StopPoint&
PlanningTarget::HasBitSetters::stop_point(const PlanningTarget* msg) {
  return *msg->stop_point_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlanningTarget::kStopPointFieldNumber;
const int PlanningTarget::kCruiseSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlanningTarget::PlanningTarget()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:lattice_structure.PlanningTarget)
}
PlanningTarget::PlanningTarget(const PlanningTarget& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stop_point()) {
    stop_point_ = new ::lattice_structure::StopPoint(*from.stop_point_);
  } else {
    stop_point_ = nullptr;
  }
  cruise_speed_ = from.cruise_speed_;
  // @@protoc_insertion_point(copy_constructor:lattice_structure.PlanningTarget)
}

void PlanningTarget::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PlanningTarget_lattice_5fstructure_2eproto.base);
  ::memset(&stop_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cruise_speed_) -
      reinterpret_cast<char*>(&stop_point_)) + sizeof(cruise_speed_));
}

PlanningTarget::~PlanningTarget() {
  // @@protoc_insertion_point(destructor:lattice_structure.PlanningTarget)
  SharedDtor();
}

void PlanningTarget::SharedDtor() {
  if (this != internal_default_instance()) delete stop_point_;
}

void PlanningTarget::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlanningTarget& PlanningTarget::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PlanningTarget_lattice_5fstructure_2eproto.base);
  return *internal_default_instance();
}


void PlanningTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:lattice_structure.PlanningTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(stop_point_ != nullptr);
    stop_point_->Clear();
  }
  cruise_speed_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PlanningTarget::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PlanningTarget*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .lattice_structure.StopPoint stop_point = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::lattice_structure::StopPoint::_InternalParse;
        object = msg->mutable_stop_point();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional double cruise_speed = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_cruise_speed(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PlanningTarget::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lattice_structure.PlanningTarget)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .lattice_structure.StopPoint stop_point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stop_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double cruise_speed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {
          HasBitSetters::set_has_cruise_speed(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cruise_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lattice_structure.PlanningTarget)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lattice_structure.PlanningTarget)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PlanningTarget::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lattice_structure.PlanningTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .lattice_structure.StopPoint stop_point = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::stop_point(this), output);
  }

  // optional double cruise_speed = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->cruise_speed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:lattice_structure.PlanningTarget)
}

::google::protobuf::uint8* PlanningTarget::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:lattice_structure.PlanningTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .lattice_structure.StopPoint stop_point = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::stop_point(this), target);
  }

  // optional double cruise_speed = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->cruise_speed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lattice_structure.PlanningTarget)
  return target;
}

size_t PlanningTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lattice_structure.PlanningTarget)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .lattice_structure.StopPoint stop_point = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stop_point_);
    }

    // optional double cruise_speed = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlanningTarget::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lattice_structure.PlanningTarget)
  GOOGLE_DCHECK_NE(&from, this);
  const PlanningTarget* source =
      ::google::protobuf::DynamicCastToGenerated<PlanningTarget>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lattice_structure.PlanningTarget)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lattice_structure.PlanningTarget)
    MergeFrom(*source);
  }
}

void PlanningTarget::MergeFrom(const PlanningTarget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lattice_structure.PlanningTarget)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_stop_point()->::lattice_structure::StopPoint::MergeFrom(from.stop_point());
    }
    if (cached_has_bits & 0x00000002u) {
      cruise_speed_ = from.cruise_speed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlanningTarget::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lattice_structure.PlanningTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlanningTarget::CopyFrom(const PlanningTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lattice_structure.PlanningTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlanningTarget::IsInitialized() const {
  return true;
}

void PlanningTarget::Swap(PlanningTarget* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlanningTarget::InternalSwap(PlanningTarget* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(stop_point_, other->stop_point_);
  swap(cruise_speed_, other->cruise_speed_);
}

::google::protobuf::Metadata PlanningTarget::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_lattice_5fstructure_2eproto);
  return ::file_level_metadata_lattice_5fstructure_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace lattice_structure
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::lattice_structure::StopPoint* Arena::CreateMaybeMessage< ::lattice_structure::StopPoint >(Arena* arena) {
  return Arena::CreateInternal< ::lattice_structure::StopPoint >(arena);
}
template<> PROTOBUF_NOINLINE ::lattice_structure::PlanningTarget* Arena::CreateMaybeMessage< ::lattice_structure::PlanningTarget >(Arena* arena) {
  return Arena::CreateInternal< ::lattice_structure::PlanningTarget >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
