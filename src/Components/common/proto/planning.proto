syntax = "proto2";

package planning;

import "header.proto";
import "chassis.proto";
import "pnc_point.proto";


message EStop {
  // is_estop == true when emergency stop is required
  optional bool is_estop = 1;
  optional string reason = 2;
}

message TaskStats {
  optional string name = 1;
  optional double time_ms = 2;
}

message LatencyStats {
  optional double total_time_ms = 1;
  repeated TaskStats task_stats = 2;
  optional double init_frame_time_ms = 3;
}

enum JucType {
  UNKNOWN = 0;
  IN_ROAD = 1;
  CROSS_ROAD = 2;
  FORK_ROAD = 3;
  MAIN_SIDE = 4;
  DEAD_END = 5;
}

message RSSInfo {
  optional bool is_rss_safe = 1;
  optional double cur_dist_lon = 2;
  optional double rss_safe_dist_lon = 3;
  optional double acc_lon_range_minimum = 4;
  optional double acc_lon_range_maximum = 5;
  optional double acc_lat_left_range_minimum = 6;
  optional double acc_lat_left_range_maximum = 7;
  optional double acc_lat_right_range_minimum = 8;
  optional double acc_lat_right_range_maximum = 9;
}

// next id: 24
message ADCTrajectory {
  optional controller.Header header = 1;

  optional double total_path_length = 2;  // in meters
  
  optional double total_path_time = 3;    // in seconds
  
  optional EStop estop = 6;
  
  
  // is_replan == true mean replan triggered
  optional bool is_replan = 9 [default = false];
  
  // Specify trajectory gear
  optional canbus.Chassis.GearPosition gear = 10;
  
  // path data + speed data
  repeated points.TrajectoryPoint trajectory_point = 12;
  
  // path point without speed info
  repeated points.PathPoint path_point = 13;
  
  // optional apollo.planning.DecisionResult decision = 14;
  
  optional LatencyStats latency_stats = 15;
  
  // the routing used for current planning result
  optional controller.Header routing_header = 16;
  enum RightOfWayStatus {
    UNPROTECTED = 0;
    PROTECTED = 1;
  }
  optional RightOfWayStatus right_of_way_status = 17;
  
  
  enum TrajectoryType {
    UNKNOWN = 0;
    NORMAL = 1;
    PATH_FALLBACK = 2;
    SPEED_FALLBACK = 3;
    PATH_REUSED = 4;
  }
  optional TrajectoryType trajectory_type = 21 [default = UNKNOWN];
  
  optional string replan_reason = 22;
  
  // complete dead end flag
  optional bool car_in_dead_end = 24;

  // output related to RSS
  optional RSSInfo rss_info = 100;
}
